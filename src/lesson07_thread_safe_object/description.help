Когда несколько потоков используют некий объект, возможен конфликт.
Как сделать объект потокобезопасным?

Вариант 1.
Не создавать общих ресурсов для потоков,
создавать только локальные переменные,
не передавать их в другие потоки. *
То есть, не создавать в классе поля, передающиеся извне.
Или сделать класс совсем без полей.

Но если поля нужны?

Вариант 2a.
Делать неизменяемые (immutable) объекты.

Вариант 2б.
Делать read-only методы, не меняющие значения общих ресурсов, см. класс GetterExample.
Но в случае объекта ссылочного типа можно извлечь его
и вносить изменения (см. класс GetterExampleRunner).
Нарушается иммутабельность.
Иммутабельный класс должен предотвращать утечку ссылки:
в конструкторе брать не ссылку на принятый объект, а делать его копию;
то же самое в геттере - отдавать ссылку на копию объекта.

Либо в конструкторе завернуть принятый объект в немодифицируемую коллекцию,
тогда при попытке изменения коллекции вылетит исключение.

Вариант 3.
Использовать все синхронизированные методы либо синхронизированные коллекции.