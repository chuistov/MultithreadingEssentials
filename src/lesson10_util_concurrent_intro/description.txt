До сих пор изучали многопоточность на самом низком уровне.

Пакет java.util.concurrent предоставляет более высокоуровневые средства
для потокобезопасной работы.
Появился в java 1.5.

1. Классы Atomic для безопасного инкремента таких типов, как int, long и т. д.
2. Классы Lock. До сих пор для блокировки ресурса пользовались
ключевым словом synchronized на уровне метода или блока кода.
Классы Lock обеспечивают более удобный механизм блокировки ресурсов,
позволяя избежать дедлоки.
3. Потокобезопасные коллекции.
4. Пулы потоков (thread pool) - ExecutorService. Экономят время на создание потоков.
С ними связаны классы Callable и CompletableFuture.
5. Полезные классы для решения конкретных задач:
CountDownLatch, CyclicBarrier, Exchanger, Phaser, Semaphore.

В большинстве этих классов не используются synchronized блоки и методы wait(), notify(), notifyAll().
Они используют другую методику - класс Unsafe, позволяющий не блокировать мониторы напрямую.
Тем самым повышается производительность.
